buildscript {
    repositories {
        mavenCentral()
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
    }
    dependencies {
        classpath 'com.adarshr:gradle-test-logger-plugin:4.0.0'
    }
}

ext{
    targetArtefactIdDev = "pushwoosh-dev"
    targetArtefactId = "pushwoosh"
    targetName = "Pushwoosh"
    targetDescription = "Pushwoosh push notifications SDK for Android"
}

apply plugin: 'com.android.library'
apply from: '../scripts/quality/quality.gradle'
apply plugin: 'com.adarshr.test-logger'
apply from: '../scripts/buildSdk/publish.gradle'
apply from: '../scripts/prepareAar/build.gradle'

android {
    compileSdkVersion global_compileSdkVersion

    namespace "com.pushwoosh"
    testNamespace "com.pushwoosh.test"

    defaultConfig {
        versionName global_versionName
        minSdkVersion global_minSdkVersion
        buildConfigField("String","VERSION_NAME","\"${defaultConfig.versionName}\"")
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles '../proguard-android-optimize-no-access-modification.txt', '../proguard-common.txt',
                    'proguard/public.txt', 'proguard/protected.txt'
        }
        debug {
            minifyEnabled false
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }

    useLibrary 'android.test.runner'
    useLibrary 'android.test.base'
    useLibrary 'android.test.mock'

    publishing {
        singleVariant("release")
    }
}

dependencies {

    implementation "androidx.work:work-runtime:${workManager}"
    implementation "androidx.legacy:legacy-support-v4:${legacy_support_v4}"

    androidTestImplementation "androidx.annotation:annotation:${support}"
    androidTestImplementation 'androidx.test.ext:junit:1.2.1'
    androidTestImplementation 'androidx.test:rules:1.6.1'
    androidTestImplementation "androidx.work:work-testing:2.10.3"
    androidTestImplementation "androidx.test:core:1.7.0"
    androidTestImplementation 'junit:junit:4.13.2'
    androidTestImplementation "org.mockito:mockito-core:${mockito}"

    testImplementation "androidx.work:work-testing:${workManager}"
    testImplementation 'junit:junit:4.13.2'
    testImplementation "androidx.work:work-testing:2.9.0"
    testImplementation "androidx.test:core:1.7.0"
    testImplementation "org.mockito:mockito-core:${mockito}"
    testImplementation files('testLibs/json.jar')

    testImplementation 'org.hamcrest:hamcrest-core:1.3'
    testImplementation 'org.hamcrest:hamcrest-integration:1.3'
    testImplementation 'org.hamcrest:hamcrest-library:1.3'

    testImplementation 'org.robolectric:robolectric:4.13'
    testImplementation 'org.robolectric:shadows-httpclient:4.13'

    testImplementation 'com.squareup.okhttp3:mockwebserver:3.6.0'
    testImplementation 'org.skyscreamer:jsonassert:1.5.0'
}

// Dokka documentation configuration
apply from: '../scripts/dokka-config.gradle'

// Custom Javadoc generation for Maven publication
apply from: '../scripts/buildSdk/javadoc.gradle'