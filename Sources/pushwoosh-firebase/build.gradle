/*
 *
 * Copyright (c) 2017. Pushwoosh Inc. (http://www.pushwoosh.com)
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * (i) the original and/or modified Software should be used exclusively to work with Pushwoosh services,
 *
 * (ii) the above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
 * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
 * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

ext{
    targetArtefactIdDev = "pushwoosh-firebase-dev"
    targetArtefactId = "pushwoosh-firebase"
    targetName = "Pushwoosh Firebase"
    targetDescription = "Pushwoosh Firebase"
}

apply plugin: 'com.android.library'
apply from: '../scripts/quality/quality.gradle'
apply from: '../scripts/buildSdk/publish.gradle'
apply from: '../scripts/prepareAar/build.gradle'

android {
    compileSdkVersion global_compileSdkVersion
    namespace "com.pushwoosh.firebase"
    testNamespace "com.pushwoosh.firebase.test"

    defaultConfig {
        versionName global_versionName
        minSdkVersion global_minSdkVersion
        targetSdkVersion global_targetVersion
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), '../proguard-common.txt',
                    'proguard/public.txt', 'proguard/protected.txt'
        }
        debug {
            minifyEnabled false
        }
        coverage {
            testCoverageEnabled true
            minifyEnabled false
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    api project(':pushwoosh')

    implementation "com.google.firebase:firebase-messaging:${firebase}"
    implementation "androidx.work:work-runtime:${workManager}"

    androidTestImplementation "androidx.annotation:annotation:${support}"
    androidTestImplementation 'androidx.test.ext:junit:1.2.1'
    androidTestImplementation 'androidx.test:rules:1.6.1'
    androidTestImplementation 'junit:junit:4.13.2'
    androidTestImplementation "org.mockito:mockito-core:${mockito}"

    testImplementation "androidx.work:work-testing:${workManager}"
    testImplementation 'junit:junit:4.13.2'
    testImplementation "org.mockito:mockito-core:${mockito}"
    testImplementation files('testLibs/json.jar')

    testImplementation 'org.hamcrest:hamcrest-core:1.3'
    testImplementation 'org.hamcrest:hamcrest-integration:1.3'
    testImplementation 'org.hamcrest:hamcrest-library:1.3'

    testImplementation 'org.robolectric:robolectric:4.13'
    testImplementation 'org.robolectric:shadows-httpclient:4.13'

    testImplementation 'com.squareup.okhttp3:mockwebserver:3.6.0'
    testImplementation 'org.skyscreamer:jsonassert:1.5.0'
}
